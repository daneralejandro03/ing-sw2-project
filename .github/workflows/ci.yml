name: CI Backend

on:
  push:
    branches: [salazardevelopment]
  pull_request:
    branches: [salazardevelopment]
  workflow_dispatch:

# ================= BUILD & PUSH IMÁGENES =================
jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      # variables necesarias en el build (opcional)
      NOTIFY_PORT: ${{ secrets.PORT }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU (para multi-plataforma)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ms-notifications image
        uses: docker/build-push-action@v6
        with:
          context: BACKEND/ms-notifications
          push: true
          tags: myorg/ms-notifications:latest

      - name: Build and push ms-security image
        uses: docker/build-push-action@v6
        with:
          context: BACKEND/ms-security
          push: true
          tags: myorg/ms-security:latest

  # ================= TEST en contenedores =================
  test-backend:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Bring up services for testing
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: BACKEND/docker-compose.yml

      - name: Run tests in ms-notifications container
        run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "EMAIL_CONNECTION_STRING=${{ secrets.EMAIL_CONNECTION_STRING }}" >> $GITHUB_ENV
          echo "EMAIL_SENDER_ADDRESS=${{ secrets.EMAIL_SENDER_ADDRESS }}" >> $GITHUB_ENV
          echo "TWILIO_SID=${{ secrets.TWILIO_SID }}" >> $GITHUB_ENV
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "TWILIO_FROM=${{ secrets.TWILIO_FROM }}" >> $GITHUB_ENV

      # Set environment variables for ms-security
      - name: Set environment variables for ms-security
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
          echo "PORT=3001" >> $GITHUB_ENV  # Puedes usar 3001 o cualquier otro puerto necesario
          echo "NOTIFICATION_API_URL=${{ secrets.NOTIFICATION_API_URL }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

      # Install dependencies for ms-notifications
      - name: Install dependencies for ms-notifications
        run: |
          cd BACKEND/ms-notifications
          npm install

      # Install dependencies for ms-security
      - name: Install dependencies for ms-security
        run: |
          cd BACKEND/ms-security
          npm install

      
      - name: Start ms-notifications
        run: |
          cd BACKEND/ms-notifications
          npm run start

      # Start ms-security
      - name: Start ms-security
        run: |
          cd BACKEND/ms-security
          npm run start
