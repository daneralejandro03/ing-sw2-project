name: CI Backend

on:
  push:
    branches: [salazardevelopment]
  pull_request:
    branches: [salazardevelopment]
  workflow_dispatch:

# ================= BUILD & PUSH IMAGES =================
jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      NOTIFY_PORT: ${{ secrets.PORT }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        service: [ms-notifications, ms-security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU for multi-platform
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: BACKEND/${{ matrix.service }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

  # ================= TEST in containers =================
  test-backend:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Bring up services for testing
        run: |
          docker compose -f BACKEND/ms-notifications/docker-compose.yml up -d
          docker compose -f BACKEND/ms-security/docker-compose.yml up -d

      - name: Run tests in ms-notifications container
        run: |
          docker compose -f BACKEND/ms-notifications/docker-compose.yml exec ms-notifications npm run test:ci

      - name: Run tests in ms-security container
        run: |
          docker compose -f BACKEND/ms-security/docker-compose.yml exec ms-security npm run test:ci

      - name: Tear down Compose services
        run: |
          docker compose -f BACKEND/ms-notifications/docker-compose.yml down
          docker compose -f BACKEND/ms-security/docker-compose.yml down

  # ================= DEPLOY with Docker Compose =================
  deploy-backend:
    if: github.ref == 'refs/heads/salazardevelopment'
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy Compose files to remote
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          source: |
            BACKEND/ms-notifications/docker-compose.yml
            BACKEND/ms-security/docker-compose.yml
          target: "~/app/"

      - name: Deploy on remote via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          script: |
            cd ~/app
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d --remove-orphans
